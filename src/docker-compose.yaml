version: '3.9'
networks:
  kafka-net: {}
services:
  kafka-1:
    image: apache/kafka-native
    hostname: kafka-1
    container_name: kafka-1
    ports:
    - 29092:9092
    environment:
      KAFKA_NODE_ID: '1'
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      KAFKA_LISTENERS: PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:19092,PLAINTEXT_HOST://localhost:29092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_MIN_ISR: '1'
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
    networks:
    - kafka-net
  kafka-2:
    image: apache/kafka-native
    hostname: kafka-2
    container_name: kafka-2
    ports:
    - 39092:9092
    environment:
      KAFKA_NODE_ID: '2'
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      KAFKA_LISTENERS: PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:19092,PLAINTEXT_HOST://localhost:39092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_MIN_ISR: '1'
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
    networks:
    - kafka-net
  kafka-3:
    image: apache/kafka-native
    hostname: kafka-3
    container_name: kafka-3
    ports:
    - 49092:9092
    environment:
      KAFKA_NODE_ID: '3'
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      KAFKA_LISTENERS: PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:19092,PLAINTEXT_HOST://localhost:49092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_MIN_ISR: '1'
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
    networks:
    - kafka-net
  start-and-goal-1:
    build:
      context: .
      dockerfile: Dockerfile.segment
    container_name: start-and-goal-1
    environment:
      SEGMENT_ID: start-and-goal-1
      SEGMENT_TYPE: start-goal
      NEXT_SEGMENTS: segment-1-1
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    networks:
    - kafka-net
  segment-1-1:
    build:
      context: .
      dockerfile: Dockerfile.segment
    container_name: segment-1-1
    environment:
      SEGMENT_ID: segment-1-1
      SEGMENT_TYPE: normal
      NEXT_SEGMENTS: segment-1-2
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    networks:
    - kafka-net
  segment-1-2:
    build:
      context: .
      dockerfile: Dockerfile.segment
    container_name: segment-1-2
    environment:
      SEGMENT_ID: segment-1-2
      SEGMENT_TYPE: normal
      NEXT_SEGMENTS: start-and-goal-1
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    networks:
    - kafka-net
  start-and-goal-2:
    build:
      context: .
      dockerfile: Dockerfile.segment
    container_name: start-and-goal-2
    environment:
      SEGMENT_ID: start-and-goal-2
      SEGMENT_TYPE: start-goal
      NEXT_SEGMENTS: segment-2-1
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    networks:
    - kafka-net
  segment-2-1:
    build:
      context: .
      dockerfile: Dockerfile.segment
    container_name: segment-2-1
    environment:
      SEGMENT_ID: segment-2-1
      SEGMENT_TYPE: normal
      NEXT_SEGMENTS: segment-2-2
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    networks:
    - kafka-net
  segment-2-2:
    build:
      context: .
      dockerfile: Dockerfile.segment
    container_name: segment-2-2
    environment:
      SEGMENT_ID: segment-2-2
      SEGMENT_TYPE: normal
      NEXT_SEGMENTS: start-and-goal-2
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    networks:
    - kafka-net
  start-and-goal-3:
    build:
      context: .
      dockerfile: Dockerfile.segment
    container_name: start-and-goal-3
    environment:
      SEGMENT_ID: start-and-goal-3
      SEGMENT_TYPE: start-goal
      NEXT_SEGMENTS: segment-3-1
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    networks:
    - kafka-net
  segment-3-1:
    build:
      context: .
      dockerfile: Dockerfile.segment
    container_name: segment-3-1
    environment:
      SEGMENT_ID: segment-3-1
      SEGMENT_TYPE: normal
      NEXT_SEGMENTS: segment-3-2
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    networks:
    - kafka-net
  segment-3-2:
    build:
      context: .
      dockerfile: Dockerfile.segment
    container_name: segment-3-2
    environment:
      SEGMENT_ID: segment-3-2
      SEGMENT_TYPE: normal
      NEXT_SEGMENTS: start-and-goal-3
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
    depends_on:
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    networks:
    - kafka-net
